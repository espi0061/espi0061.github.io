@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed&family=Source+Sans+Pro:wght@600;700&display=swap');

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcsaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* CSS RESET */

/* CUSTOM CSS */

/* I stated box-sizing: border-box; to the whole document so that when I add padding and border to a box, the box does not add up pixels or sizes in general (this to prevent issues when sizing)  */
  * {
    box-sizing: border-box;
}

/* I add max-width: 100% to all images so that they get their parent element's size at the most (this to make images responsive)*/
img {
    max-width: 100%;
}

/* I add font-size: 16px; to html tag to make it my root's font size. I did so since I am going to work mainly with em and rem and 16px will be my reference point */
html {
    font-family: 'Source Sans Pro', sans-serif;
    font-size: 16px;
}


/* I add line-height to the body tag so that all my text lines will have a height of the source sizex1.5 hence my website will be more legible) */
body {
    background-image: url('../images/cookies-2294706_1920@2x.jpg');
    background-size: 100%;
    line-height: 1.5;
}

a {
    text-decoration: none;
    text-align: center;
    color:black;
    font-size: 2rem;
    font-weight:600;
    background-color: rgba(255, 255, 255, 0.47);
    display: inline-block;
    width: 100%;
    margin-bottom: .5rem;
    padding: .4em 0;
    
}

ul {
    list-style: none;
}

/* the animation property was set to animate the logo when hovered (to change its shape in different ways at different times */
.logo img:hover {
    animation: logo 1s ease-in-out;
    animation-iteration-count: infinite;
  }
  
  /* the keyframes control what happens in certain fraction of the time stablished in the animation property. It is connected to the animation through a name. In this case is logo */
  @keyframes logo {
    20% {
        transform:rotate(.5turn);
       }
           
    80% {
         transform: rotate(1turn);
       }
  }

  .home-image:hover {
    animation: img 1s ease-in-out;
    animation-iteration-count: infinite;
  }
  
  @keyframes img {
    20% {
     transform: scale(2);
    }
    
    40% {
      transform: scale(1);
    }
       
    80% {
      transform: scale(2);
    }

    100% {
      transform: scale(1);
    }
  }

  /* display:grid is applied on the header to control where the logo, the nav, and the header icons are going to be located at according to the layout established */
header {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: .4fr 1fr;
    /* grid-template-areas specify what area is going to be occupied by certain element within the grid */
    grid-template-areas: 
    '. logo icons'
    'nav nav nav';
    margin-top: .5rem;
}

nav {
    /* grid-area gives a label to an element who's going to be used in grid-template-areas */
    grid-area: nav;
    margin-top: 1rem;
}

.logo {
    grid-area: logo;
    padding-left: 1.2em;
}

/* Display: flex; was applied to .header-icons to control the layout of the header icons */
.header-icons {
    grid-area: icons;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

.fas {
    font-size: 1.3rem;
}

main {
    margin-bottom: 2rem;
}

.home-image {
    background-color: black;
    width: 370px;
    margin: .5rem auto;
    padding: .3em 0 0 .3em;
    height: 250px;
}

.home-image img {
    width: 360px;    
}

.home-image-text-container {
    background-color: rgba(0, 0, 0, 0.47);
    position: relative;
    bottom: 66px;
    padding: 1em 0;
}

.home-image-text-container p {
    color: white;
    font-size: 1.3rem;
    text-align: center;
}

footer {
    background-color: black;
    text-align: center;
    padding: .5em 0;
    color: white;
}

footer p {
    margin-bottom: 1.8rem;
}

/* display: flex; was applied to .social-media-icons to control the way social media icons within the footer are displayed */
.social-media-icons {
    display: flex;
    justify-content: center;
    justify-content: space-evenly;
    font-size: 1.5rem;
}

/* I add @media with min-width: 768px so that I can develop the required changes to fit a tabley layout which will display once the screen size reaches 768px */ 
@media screen and (min-width: 768px) {
    a {
        background-color: transparent;
        font-weight: 700;
        font-size: 1.5rem;
    }

    header {
        grid-template-columns: 1fr 4fr 1fr;
        grid-template-rows: 1fr;
        grid-template-areas: 
        'logo nav icons';
    }

    ul {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: 1fr;
        grid-template-areas: 
        'a1 a2 a3 a4';
    }

    .home {
        grid-area: a1;
    }

    .ice-cream {
        grid-area: a2;
    }

    .about {
        grid-area: a3;
    }

    .contact {
        grid-area: a4;
    }
    .header-icons {
        flex-direction: row;
        align-items: initial;
    }

    .fas {
        margin-top: 2rem;
        font-size: 1.2rem;
    }

    .section {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(3, 1fr);
        grid-template-areas: 
        'img1 img2'
        'img3 img4'
        'img5 img6';
    }

    .home-image-1 {
        grid-area: img1;
    }

    .home-image-2 {
        grid-area: img2;
    }

    .home-image-3 {
        grid-area: img3;
    }

    .home-image-4 {
        grid-area: img4;
    }

    .home-image-5 {
        grid-area: img5;
    }

    .home-image-6 {
        grid-area: img6;
    }
}

/* I add @media with min-width: 1080px so that I can develop the required changes to fit a desktop layout which will display once the screen size reaches 1080px */
@media screen and (min-width: 1080px) {
    a{
        font-size: 2rem;
    }

    .fas {
        margin-top: 2.5rem;
        font-size: 1.6rem;
    }

    .section {
        margin-top: 5rem;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, 1fr);
        grid-template-areas: 
        'img1 img2 img3'
        'img4 img5 img6';
        row-gap: 3rem;
    }

    .home-image {
        width: 300px;
        margin: .5rem auto;
        padding: .3em 0 0 .3em;
        height: 204px;
    }
    
    .home-image img {
        width: 290px;    
    }
    
    footer {
        margin-top: 6rem;
    }
}